definitions:
  common.DataField:
    properties:
      name:
        type: string
      type:
        $ref: '#/definitions/common.DataField_Type'
    type: object
  common.DataField_Type:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    type: integer
    x-enum-varnames:
    - DataField_BOOL
    - DataField_DATE
    - DataField_INT
    - DataField_INTEGER
    - DataField_JSON
    - DataField_JSONB
    - DataField_TEXT
  common.Format:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - Format_TEXT
    - Format_BINARY
  common.Lang:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - Lang_C
    - Lang_WAT
  common.Schema:
    properties:
      fields:
        items:
          $ref: '#/definitions/common.DataField'
        type: array
      name:
        type: string
    type: object
  dao.ModuleGORM:
    properties:
      create_time:
        type: string
      ebpf:
        type: string
      ebpf_fmt:
        type: integer
      ebpf_lang:
        type: integer
      ebpf_perf_name:
        type: string
      ebpf_probes:
        type: string
      fn:
        type: string
      id:
        type: string
      name:
        type: string
      schema_attr:
        type: string
      schema_name:
        type: string
      status:
        type: integer
      wasm:
        description: wasm store the whole wasm file content
        items:
          type: integer
        type: array
      wasm_fmt:
        type: integer
      wasm_lang:
        type: integer
    type: object
  ebpf.ProbeSpec:
    properties:
      binary_path:
        type: string
      entry:
        type: string
      return:
        type: string
      sample_period_nanos:
        type: integer
      target:
        type: string
      type:
        $ref: '#/definitions/ebpf.ProbeSpec_Type'
    type: object
  ebpf.ProbeSpec_Type:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    type: integer
    x-enum-varnames:
    - ProbeSpec_KPROBE
    - ProbeSpec_SYSCALL_PROBE
    - ProbeSpec_UPROBE
    - ProbeSpec_TRACEPOINT
    - ProbeSpec_XDP
    - ProbeSpec_SAMPLE_PROBE
    - ProbeSpec_USDT
  ebpf.Program:
    properties:
      code:
        type: string
      fmt:
        $ref: '#/definitions/common.Format'
      lang:
        $ref: '#/definitions/common.Lang'
      perf_buffer_name:
        type: string
      probes:
        items:
          $ref: '#/definitions/ebpf.ProbeSpec'
        type: array
    type: object
  http.CreateModuleReq:
    properties:
      ebpf:
        $ref: '#/definitions/ebpf.Program'
      id:
        type: string
      name:
        type: string
      wasm:
        $ref: '#/definitions/wasm.Program'
    type: object
  http.CreateModuleResp:
    properties:
      code:
        type: integer
      message:
        type: string
      success:
        type: boolean
    type: object
  http.DeployModuleResp:
    properties:
      code:
        type: integer
      message:
        type: string
      success:
        type: boolean
      uid:
        type: string
    type: object
  http.HTTPResp:
    properties:
      code:
        type: integer
      message:
        type: string
      success:
        type: boolean
    type: object
  http.ListModuleResp:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/dao.ModuleGORM'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  wasm.Program:
    properties:
      code:
        items:
          type: integer
        type: array
      fmt:
        $ref: '#/definitions/common.Format'
      fn_name:
        type: string
      lang:
        $ref: '#/definitions/common.Lang'
      output_schema:
        $ref: '#/definitions/common.Schema'
    type: object
info:
  contact: {}
paths:
  /api/addModule:
    post:
      consumes:
      - application/json
      description: Create Module
      parameters:
      - description: Create module
        in: body
        name: module
        required: true
        schema:
          $ref: '#/definitions/http.CreateModuleReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.CreateModuleResp'
      summary: Create module
      tags:
      - module
  /api/deleteModule:
    get:
      consumes:
      - application/json
      description: Delete Module by id
      parameters:
      - description: delete module id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.HTTPResp'
      summary: Delete module
      tags:
      - module
  /api/deployModule:
    post:
      consumes:
      - application/json
      description: Create Module
      parameters:
      - description: deploy module id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.DeployModuleResp'
      summary: Deploy module
      tags:
      - module
  /api/listModule:
    get:
      consumes:
      - application/json
      description: List all moudle
      parameters:
      - description: query field search like 'id,name,createTime'
        in: query
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.ListModuleResp'
      summary: List all moudle
      tags:
      - module
  /api/undeployModule:
    post:
      consumes:
      - application/json
      description: Undeploy Module By ID
      parameters:
      - description: undeploy module id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.HTTPResp'
      summary: Undeploy module
      tags:
      - module
swagger: "2.0"
