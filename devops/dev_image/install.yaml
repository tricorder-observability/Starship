---
# Various packages need to be downloaded and installed
- name: Dev machine playbook
  hosts: localhost
  connection: local
  vars:
    tmp_dir: /tmp/tricorder
    base_dir: /opt/tricorder
    wasm_dir: '{{ base_dir }}/wasm'
    bin_dir: '{{ base_dir }}/bin'
    golang_dir: '{{ base_dir }}/golang'
    gopath_dir: '{{ base_dir }}/go'
    bazel_path: '{{ bin_dir }}/bazel'
  tasks:
    - name: Create bin dir
      file:
        path: "{{ bin_dir }}"
        state: directory
        mode: 'a+x'
    - name: Create golang dir
      file:
        path: "{{ golang_dir }}"
        state: directory
        mode: 'a+x'
    - name: Create gopath dir
      file:
        path: "{{ gopath_dir }}"
        state: directory
        mode: 'a+x'
    - name: Creates tmp dir
      file:
        path: "{{ tmp_dir }}"
        state: directory
    - name: Download clang-14 from S3
      # s3//tricorder-dev is a public bucket.
      ansible.builtin.get_url:
        force: true
        url: https://tricorder-dev.s3.ap-northeast-1.amazonaws.com/clang-14_0-tricorder-0.deb
        dest: '{{ tmp_dir }}/clang.deb'
      tags: clang
    - name: Install clang-14
      ansible.builtin.apt:
        deb: "{{ tmp_dir }}/clang.deb"
      tags: clang
    - name: Downlaod WASI SDK tar.gz
      ansible.builtin.get_url:
        force: true
        url: https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-19/wasi-sdk-19.0-linux.tar.gz
        dest: "{{ tmp_dir }}/wasi-sdk.tar.gz"
      tags: wasi-sdk
    - name: Create wasm dir
      file:
        path: "{{ wasm_dir }}"
        state: directory
      tags: wasi-sdk
    - name: Extract wasi-sdk.tar.gz
      ansible.builtin.unarchive:
        src: "{{ tmp_dir }}/wasi-sdk.tar.gz"
        dest: /opt/tricorder/wasm
      tags: wasi-sdk
    - name: Create a symbolic link
      ansible.builtin.file:
        src: /opt/tricorder/wasm/wasi-sdk-19.0
        dest: /opt/tricorder/wasm/wasi-sdk
        state: link
      tags: wasi-sdk
